{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\English-platform-TS\\\\src\\\\FoldersAndModules\\\\CreateModule\\\\CreateModule.tsx\";\nimport Input from \"../../Input/Input\";\nimport FormsStore from \"../../store/FormsStore\";\nimport ClassInput from \"../../store/Input\";\nimport Add from \"../Add\";\nimport { observer } from \"mobx-react-lite\";\nimport { FormNames, InputNames } from \"../../initializeForms\";\nimport WordAndTranslate from \"./WordAndTranslate\";\nimport \"./CreateModule.css\";\nimport Btn from \"../../Btns/Btn\";\nimport InputAutoFill from \"../../store/InputAutoFill\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction addWord(parent1, parent2) {\n  const newWord = parent1.clone();\n  newWord.name = `Word ${Math.ceil((FormsStore.getInstance().getForm(FormNames.CREATE_MODULE).getAllInputsAutoFill().length + 1) / 2)}`;\n  newWord.text = \"\";\n  FormsStore.getInstance().getForm(FormNames.CREATE_MODULE).addInputAutoFill(newWord);\n  const newTranslate = parent2.clone();\n  newTranslate.name = `Translate ${Math.ceil((FormsStore.getInstance().getForm(FormNames.CREATE_MODULE).getAllInputsAutoFill().length + 1) / 2)}`;\n  newWord.text = \"\";\n  FormsStore.getInstance().getForm(FormNames.CREATE_MODULE).addInputAutoFill(newTranslate);\n}\nconst createModuleForm = FormsStore.getInstance().addForm(FormNames.CREATE_MODULE);\nconst nameModule = createModuleForm.addInput(new ClassInput(InputNames.MODULE_NAME, \"\", \"Название модуля\"));\nconst firstWordInput = createModuleForm.addInputAutoFill(new InputAutoFill(`Word ${Math.ceil((createModuleForm.getAllInputsAutoFill().length + 1) / 2)}`, \"\", \"Слово на английском языке\"));\nconst firstTranslateInput = createModuleForm.addInputAutoFill(new InputAutoFill(`Translate ${Math.ceil((createModuleForm.getAllInputsAutoFill().length + 1) / 2)}`, \"\", \"Перевод\"));\nconst CreateModule = observer(_c = () => {\n  const inputs = createModuleForm.getAllInputsAutoFill().map((data, i) => {\n    return /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: data.placeholder,\n      value: data.text,\n      edit: data\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  });\n  let i;\n  let blocks = [];\n  for (i = 0; i < inputs.length; i += 2) {\n    blocks.push( /*#__PURE__*/_jsxDEV(WordAndTranslate, {\n      word: inputs[i],\n      translate: inputs[i + 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container create-modules\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Название модуля\",\n      value: nameModule.text,\n      edit: nameModule\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), blocks, /*#__PURE__*/_jsxDEV(Add, {\n      className: \"module-add\",\n      img: \"icons/plus-blue.png\",\n      onClick: () => {\n        addWord(firstWordInput, firstTranslateInput);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Btn, {\n      text: \"Создать модуль\",\n      backgroundColor: \"#4D4DFF\",\n      color: \"#ffffff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n});\n_c2 = CreateModule;\nexport default CreateModule;\nvar _c, _c2;\n$RefreshReg$(_c, \"CreateModule$observer\");\n$RefreshReg$(_c2, \"CreateModule\");","map":{"version":3,"names":["Input","FormsStore","ClassInput","Add","observer","FormNames","InputNames","WordAndTranslate","Btn","InputAutoFill","jsxDEV","_jsxDEV","addWord","parent1","parent2","newWord","clone","name","Math","ceil","getInstance","getForm","CREATE_MODULE","getAllInputsAutoFill","length","text","addInputAutoFill","newTranslate","createModuleForm","addForm","nameModule","addInput","MODULE_NAME","firstWordInput","firstTranslateInput","CreateModule","_c","inputs","map","data","i","placeholder","value","edit","fileName","_jsxFileName","lineNumber","columnNumber","blocks","push","word","translate","className","children","img","onClick","backgroundColor","color","_c2","$RefreshReg$"],"sources":["C:/code/English-platform-TS/src/FoldersAndModules/CreateModule/CreateModule.tsx"],"sourcesContent":["import Input from \"../../Input/Input\";\r\nimport FormsStore from \"../../store/FormsStore\";\r\nimport ClassInput from \"../../store/Input\"\r\nimport Add from \"../Add\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {FormNames, InputNames} from \"../../initializeForms\";\r\nimport WordAndTranslate from \"./WordAndTranslate\";\r\nimport \"./CreateModule.css\"\r\nimport Btn from \"../../Btns/Btn\";\r\nimport InputAutoFill from \"../../store/InputAutoFill\";\r\n\r\nfunction addWord(parent1: InputAutoFill, parent2: InputAutoFill){\r\n  const newWord = parent1.clone()\r\n  newWord.name = `Word ${Math.ceil((FormsStore.getInstance().getForm(FormNames.CREATE_MODULE)!.getAllInputsAutoFill().length + 1) / 2)}`\r\n  newWord.text = \"\"\r\n  FormsStore.getInstance().getForm(FormNames.CREATE_MODULE)!.addInputAutoFill(newWord)\r\n\r\n  const newTranslate = parent2.clone()\r\n  newTranslate.name = `Translate ${Math.ceil((FormsStore.getInstance().getForm(FormNames.CREATE_MODULE)!.getAllInputsAutoFill().length + 1) / 2)}`\r\n  newWord.text = \"\"\r\n  FormsStore.getInstance().getForm(FormNames.CREATE_MODULE)!.addInputAutoFill(newTranslate)\r\n}\r\n\r\nconst createModuleForm = FormsStore.getInstance().addForm(FormNames.CREATE_MODULE)\r\nconst nameModule = createModuleForm.addInput(new ClassInput(InputNames.MODULE_NAME, \"\", \"Название модуля\"))\r\n\r\nconst firstWordInput = createModuleForm.addInputAutoFill(\r\n  new InputAutoFill(`Word ${Math.ceil((createModuleForm.getAllInputsAutoFill().length + 1) / 2)}`, \"\", \"Слово на английском языке\")\r\n)\r\n\r\nconst firstTranslateInput = createModuleForm.addInputAutoFill(\r\n  new InputAutoFill(`Translate ${Math.ceil((createModuleForm.getAllInputsAutoFill().length + 1) / 2)}`, \"\", \"Перевод\")\r\n)\r\n\r\n\r\nconst CreateModule = observer(() => {\r\n\r\n  const inputs = createModuleForm.getAllInputsAutoFill().map((data, i) => {\r\n    return <Input placeholder={data.placeholder} value={data.text} edit={data} key={i}/>\r\n  })\r\n\r\n  let i: number\r\n  let blocks = []\r\n  for (i = 0; i < inputs.length; i += 2){\r\n    blocks.push(\r\n      <WordAndTranslate word={inputs[i]} translate={inputs[i + 1]}/>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <section className=\"container create-modules\">\r\n      <Input placeholder={\"Название модуля\"} value={nameModule.text} edit={nameModule}/>\r\n      {blocks}\r\n      <Add className={\"module-add\"} img={\"icons/plus-blue.png\"} onClick={() => {addWord(firstWordInput, firstTranslateInput)}}/>\r\n      <Btn text={\"Создать модуль\"} backgroundColor={\"#4D4DFF\"} color={\"#ffffff\"}/>\r\n    </section>\r\n  )\r\n})\r\nexport default CreateModule"],"mappings":";AAAA,OAAOA,KAAK,MAAM,mBAAmB;AACrC,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAOC,GAAG,MAAM,QAAQ;AACxB,SAAQC,QAAQ,QAAO,iBAAiB;AACxC,SAAQC,SAAS,EAAEC,UAAU,QAAO,uBAAuB;AAC3D,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAO,oBAAoB;AAC3B,OAAOC,GAAG,MAAM,gBAAgB;AAChC,OAAOC,aAAa,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,OAAOA,CAACC,OAAsB,EAAEC,OAAsB,EAAC;EAC9D,MAAMC,OAAO,GAAGF,OAAO,CAACG,KAAK,CAAC,CAAC;EAC/BD,OAAO,CAACE,IAAI,GAAI,QAAOC,IAAI,CAACC,IAAI,CAAC,CAAClB,UAAU,CAACmB,WAAW,CAAC,CAAC,CAACC,OAAO,CAAChB,SAAS,CAACiB,aAAa,CAAC,CAAEC,oBAAoB,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAE,EAAC;EACtIT,OAAO,CAACU,IAAI,GAAG,EAAE;EACjBxB,UAAU,CAACmB,WAAW,CAAC,CAAC,CAACC,OAAO,CAAChB,SAAS,CAACiB,aAAa,CAAC,CAAEI,gBAAgB,CAACX,OAAO,CAAC;EAEpF,MAAMY,YAAY,GAAGb,OAAO,CAACE,KAAK,CAAC,CAAC;EACpCW,YAAY,CAACV,IAAI,GAAI,aAAYC,IAAI,CAACC,IAAI,CAAC,CAAClB,UAAU,CAACmB,WAAW,CAAC,CAAC,CAACC,OAAO,CAAChB,SAAS,CAACiB,aAAa,CAAC,CAAEC,oBAAoB,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAE,EAAC;EAChJT,OAAO,CAACU,IAAI,GAAG,EAAE;EACjBxB,UAAU,CAACmB,WAAW,CAAC,CAAC,CAACC,OAAO,CAAChB,SAAS,CAACiB,aAAa,CAAC,CAAEI,gBAAgB,CAACC,YAAY,CAAC;AAC3F;AAEA,MAAMC,gBAAgB,GAAG3B,UAAU,CAACmB,WAAW,CAAC,CAAC,CAACS,OAAO,CAACxB,SAAS,CAACiB,aAAa,CAAC;AAClF,MAAMQ,UAAU,GAAGF,gBAAgB,CAACG,QAAQ,CAAC,IAAI7B,UAAU,CAACI,UAAU,CAAC0B,WAAW,EAAE,EAAE,EAAE,iBAAiB,CAAC,CAAC;AAE3G,MAAMC,cAAc,GAAGL,gBAAgB,CAACF,gBAAgB,CACtD,IAAIjB,aAAa,CAAE,QAAOS,IAAI,CAACC,IAAI,CAAC,CAACS,gBAAgB,CAACL,oBAAoB,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAE,EAAC,EAAE,EAAE,EAAE,2BAA2B,CAClI,CAAC;AAED,MAAMU,mBAAmB,GAAGN,gBAAgB,CAACF,gBAAgB,CAC3D,IAAIjB,aAAa,CAAE,aAAYS,IAAI,CAACC,IAAI,CAAC,CAACS,gBAAgB,CAACL,oBAAoB,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAE,EAAC,EAAE,EAAE,EAAE,SAAS,CACrH,CAAC;AAGD,MAAMW,YAAY,GAAG/B,QAAQ,CAAAgC,EAAA,GAACA,CAAA,KAAM;EAElC,MAAMC,MAAM,GAAGT,gBAAgB,CAACL,oBAAoB,CAAC,CAAC,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;IACtE,oBAAO7B,OAAA,CAACX,KAAK;MAACyC,WAAW,EAAEF,IAAI,CAACE,WAAY;MAACC,KAAK,EAAEH,IAAI,CAACd,IAAK;MAACkB,IAAI,EAAEJ;IAAK,GAAMC,CAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtF,CAAC,CAAC;EAEF,IAAIP,CAAS;EACb,IAAIQ,MAAM,GAAG,EAAE;EACf,KAAKR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,CAACb,MAAM,EAAEgB,CAAC,IAAI,CAAC,EAAC;IACpCQ,MAAM,CAACC,IAAI,eACTtC,OAAA,CAACJ,gBAAgB;MAAC2C,IAAI,EAAEb,MAAM,CAACG,CAAC,CAAE;MAACW,SAAS,EAAEd,MAAM,CAACG,CAAC,GAAG,CAAC;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAC/D,CAAC;EACH;EAEA,oBACEpC,OAAA;IAASyC,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBAC3C1C,OAAA,CAACX,KAAK;MAACyC,WAAW,EAAE,iBAAkB;MAACC,KAAK,EAAEZ,UAAU,CAACL,IAAK;MAACkB,IAAI,EAAEb;IAAW;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACjFC,MAAM,eACPrC,OAAA,CAACR,GAAG;MAACiD,SAAS,EAAE,YAAa;MAACE,GAAG,EAAE,qBAAsB;MAACC,OAAO,EAAEA,CAAA,KAAM;QAAC3C,OAAO,CAACqB,cAAc,EAAEC,mBAAmB,CAAC;MAAA;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC1HpC,OAAA,CAACH,GAAG;MAACiB,IAAI,EAAE,gBAAiB;MAAC+B,eAAe,EAAE,SAAU;MAACC,KAAK,EAAE;IAAU;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEd,CAAC,CAAC;AAAAW,GAAA,GAtBIvB,YAAY;AAuBlB,eAAeA,YAAY;AAAA,IAAAC,EAAA,EAAAsB,GAAA;AAAAC,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}