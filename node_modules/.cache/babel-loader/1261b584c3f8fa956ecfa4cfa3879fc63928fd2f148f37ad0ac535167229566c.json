{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\English-platform-TS\\\\src\\\\Input\\\\InputAutoFill.tsx\";\nimport \"./Input.css\";\nimport FormsStore from \"../store/FormsStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputAutoFill({\n  placeholder,\n  value,\n  edit,\n  onChange,\n  prev\n}) {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    placeholder: placeholder,\n    value: value,\n    onChange: event => {\n      if (prev) {\n        onChange(event, edit, prev);\n        console.log(FormsStore.getInstance());\n        edit === null || edit === void 0 ? void 0 : edit.onChange(event.target.value);\n      } else {\n        onChange(event, edit);\n        console.log(FormsStore.getInstance());\n        edit === null || edit === void 0 ? void 0 : edit.onChange(event.target.value);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = InputAutoFill;\nexport default InputAutoFill;\nvar _c;\n$RefreshReg$(_c, \"InputAutoFill\");","map":{"version":3,"names":["FormsStore","jsxDEV","_jsxDEV","InputAutoFill","placeholder","value","edit","onChange","prev","type","event","console","log","getInstance","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/code/English-platform-TS/src/Input/InputAutoFill.tsx"],"sourcesContent":["import \"./Input.css\"\r\nimport FormsStore from \"../store/FormsStore\";\r\nimport InputAutoFillClass from \"../store/InputAutoFill\";\r\n\r\ninterface InputProps{\r\n  placeholder?: string,\r\n  value?: string,\r\n  edit?: InputAutoFillClass,\r\n  onChange: any,\r\n  prev?: InputAutoFillClass\r\n}\r\nfunction InputAutoFill({placeholder, value, edit, onChange, prev}: InputProps) {\r\n  return (\r\n    <input type=\"text\" placeholder={placeholder} value={value} onChange={\r\n      (event) => {\r\n        if(prev){\r\n          onChange(event, edit, prev)\r\n          console.log(FormsStore.getInstance())\r\n          edit?.onChange(event.target.value)\r\n        } else{\r\n          onChange(event, edit)\r\n          console.log(FormsStore.getInstance())\r\n          edit?.onChange(event.target.value)\r\n        }\r\n      }\r\n    }/>\r\n  )\r\n}\r\nexport default InputAutoFill"],"mappings":";AAAA,OAAO,aAAa;AACpB,OAAOA,UAAU,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU7C,SAASC,aAAaA,CAAC;EAACC,WAAW;EAAEC,KAAK;EAAEC,IAAI;EAAEC,QAAQ;EAAEC;AAAgB,CAAC,EAAE;EAC7E,oBACEN,OAAA;IAAOO,IAAI,EAAC,MAAM;IAACL,WAAW,EAAEA,WAAY;IAACC,KAAK,EAAEA,KAAM;IAACE,QAAQ,EAChEG,KAAK,IAAK;MACT,IAAGF,IAAI,EAAC;QACND,QAAQ,CAACG,KAAK,EAAEJ,IAAI,EAAEE,IAAI,CAAC;QAC3BG,OAAO,CAACC,GAAG,CAACZ,UAAU,CAACa,WAAW,CAAC,CAAC,CAAC;QACrCP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,QAAQ,CAACG,KAAK,CAACI,MAAM,CAACT,KAAK,CAAC;MACpC,CAAC,MAAK;QACJE,QAAQ,CAACG,KAAK,EAAEJ,IAAI,CAAC;QACrBK,OAAO,CAACC,GAAG,CAACZ,UAAU,CAACa,WAAW,CAAC,CAAC,CAAC;QACrCP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,QAAQ,CAACG,KAAK,CAACI,MAAM,CAACT,KAAK,CAAC;MACpC;IACF;EACD;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEP;AAACC,EAAA,GAhBQhB,aAAa;AAiBtB,eAAeA,aAAa;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}