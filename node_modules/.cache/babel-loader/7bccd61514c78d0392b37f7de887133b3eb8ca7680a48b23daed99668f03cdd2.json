{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport User from \"../store/User\";\nimport FormsStore from \"../store/FormsStore\";\nimport { FormNames } from \"../initializeForms\";\nimport axios from \"../axios\";\nexport async function tryGetUserData() {\n  try {\n    await axios.get(\"auth/me\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.data).then(data => User.getInstance().login = data.userName);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function openForm() {\n  // @ts-ignore\n  document.querySelector(\".bg-black\").classList.remove(\"bg-black_disable\");\n  FormsStore.getInstance().changeStatus(FormNames.CHOOSE);\n}\nexport function closeForm(event) {\n  if (event) {\n    if (event.target.classList.contains(\"bg-black\")) {\n      event.target.classList.add(\"bg-black_disable\");\n    }\n  } else {\n    // @ts-ignore\n    document.querySelector(\".bg-black\").classList.add(\"bg-black_disable\");\n    FormsStore.getInstance().changeStatus(FormNames.CHOOSE);\n  }\n}\nconst CheckAuth = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function getUserData() {\n      await tryGetUserData();\n      if (User.getInstance().login === \"\") {\n        openForm();\n        navigate(\"/\");\n      }\n    }\n    void getUserData();\n  });\n};\n_s(CheckAuth, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = CheckAuth;\nexport default CheckAuth;\nvar _c;\n$RefreshReg$(_c, \"CheckAuth\");","map":{"version":3,"names":["useNavigate","useEffect","User","FormsStore","FormNames","axios","tryGetUserData","get","headers","then","response","data","getInstance","login","userName","error","console","log","openForm","document","querySelector","classList","remove","changeStatus","CHOOSE","closeForm","event","target","contains","add","CheckAuth","_s","navigate","getUserData","_c","$RefreshReg$"],"sources":["C:/code/English-platform-TS/src/Auth/CheckAuth.tsx"],"sourcesContent":["import {useNavigate} from \"react-router-dom\";\r\nimport {useEffect} from \"react\";\r\nimport User from \"../store/User\";\r\nimport FormsStore from \"../store/FormsStore\"\r\nimport {FormNames} from \"../initializeForms\";\r\nimport axios from \"../axios\";\r\n\r\nexport async function tryGetUserData(){\r\n  try {\r\n    await axios.get(\"auth/me\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(response => response.data)\r\n      .then(data => User.getInstance().login = data.userName)\r\n  }catch (error){\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport function openForm(){\r\n  // @ts-ignore\r\n  document.querySelector(\".bg-black\").classList.remove(\"bg-black_disable\")\r\n  FormsStore.getInstance().changeStatus(FormNames.CHOOSE)\r\n}\r\n\r\nexport function closeForm(event?: any){\r\n  if(event){\r\n    if(event.target.classList.contains(\"bg-black\")){\r\n      event.target.classList.add(\"bg-black_disable\")\r\n    }\r\n  }else{\r\n    // @ts-ignore\r\n    document.querySelector(\".bg-black\").classList.add(\"bg-black_disable\")\r\n    FormsStore.getInstance().changeStatus(FormNames.CHOOSE)\r\n  }\r\n}\r\n\r\nconst CheckAuth = () => {\r\n  const navigate = useNavigate()\r\n  useEffect( () => {\r\n    async function getUserData(){\r\n      await tryGetUserData()\r\n      if(User.getInstance().login === \"\"){\r\n        openForm()\r\n        navigate(\"/\")\r\n      }\r\n    }\r\n    void getUserData()\r\n  })\r\n}\r\nexport default CheckAuth"],"mappings":";AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,SAAS,QAAO,OAAO;AAC/B,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,SAAQC,SAAS,QAAO,oBAAoB;AAC5C,OAAOC,KAAK,MAAM,UAAU;AAE5B,OAAO,eAAeC,cAAcA,CAAA,EAAE;EACpC,IAAI;IACF,MAAMD,KAAK,CAACE,GAAG,CAAC,SAAS,EAAE;MACzBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAC/BF,IAAI,CAACE,IAAI,IAAIT,IAAI,CAACU,WAAW,CAAC,CAAC,CAACC,KAAK,GAAGF,IAAI,CAACG,QAAQ,CAAC;EAC3D,CAAC,QAAOC,KAAK,EAAC;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF;AAEA,OAAO,SAASG,QAAQA,CAAA,EAAE;EACxB;EACAC,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC,CAACC,SAAS,CAACC,MAAM,CAAC,kBAAkB,CAAC;EACxEnB,UAAU,CAACS,WAAW,CAAC,CAAC,CAACW,YAAY,CAACnB,SAAS,CAACoB,MAAM,CAAC;AACzD;AAEA,OAAO,SAASC,SAASA,CAACC,KAAW,EAAC;EACpC,IAAGA,KAAK,EAAC;IACP,IAAGA,KAAK,CAACC,MAAM,CAACN,SAAS,CAACO,QAAQ,CAAC,UAAU,CAAC,EAAC;MAC7CF,KAAK,CAACC,MAAM,CAACN,SAAS,CAACQ,GAAG,CAAC,kBAAkB,CAAC;IAChD;EACF,CAAC,MAAI;IACH;IACAV,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC,CAACC,SAAS,CAACQ,GAAG,CAAC,kBAAkB,CAAC;IACrE1B,UAAU,CAACS,WAAW,CAAC,CAAC,CAACW,YAAY,CAACnB,SAAS,CAACoB,MAAM,CAAC;EACzD;AACF;AAEA,MAAMM,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGhC,WAAW,CAAC,CAAC;EAC9BC,SAAS,CAAE,MAAM;IACf,eAAegC,WAAWA,CAAA,EAAE;MAC1B,MAAM3B,cAAc,CAAC,CAAC;MACtB,IAAGJ,IAAI,CAACU,WAAW,CAAC,CAAC,CAACC,KAAK,KAAK,EAAE,EAAC;QACjCK,QAAQ,CAAC,CAAC;QACVc,QAAQ,CAAC,GAAG,CAAC;MACf;IACF;IACA,KAAKC,WAAW,CAAC,CAAC;EACpB,CAAC,CAAC;AACJ,CAAC;AAAAF,EAAA,CAZKD,SAAS;EAAA,QACI9B,WAAW;AAAA;AAAAkC,EAAA,GADxBJ,SAAS;AAaf,eAAeA,SAAS;AAAA,IAAAI,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}